
" Windows Compatible
" -----------------------------------------------------------------------------
" On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
" across (heterogeneous) systems easier.
if has('win32') || has('win64')
    set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

    " Be nice and check for multi_byte even if the config requires
    " multi_byte support most of the time
    if has("multi_byte")
        " Windows cmd.exe still uses cp850. If Windows ever moved to
        " Powershell as the primary terminal, this would be utf-8
        set termencoding=cp850
        " Let Vim use utf-8 internally, because many scripts require this
        set encoding=utf-8
        setglobal fileencoding=utf-8
        " Windows has traditionally used cp1252, so it's probably wise to
        " fallback into cp1252 instead of eg. iso-8859-15.
        " Newer Windows files might contain utf-8 or utf-16 LE so we might
        " want to try them first.
        set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
    endif
endif

"
" Setup Bundle Support
" -----------------------------------------------------------------------------
" The next three lines ensure that the ~/.vim/bundle/ system works
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

" Bundles
" -----------------------------------------------------------------------------
" Dependancies
Bundle 'gmarik/vundle'


" In your .vimrc.before.local file
" list only the plugin groups you will use
if !exists('g:Billinux_bundle_groups')
    let g:Billinux_bundle_groups=['general', 'writing', 'neocomplcache', 'programming', 'php', 'ruby', 'python', 'javascript', 'html', 'twig', 'css', 'misc',]
endif

" To override all the included bundles, add the following to your
" .vimrc.bundles.local file:
"   let g:override_Billinux_bundles = 1
if !exists("g:override_Billinux_bundles")
endif


" General
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'general')
    Bundle 'billinux/vim-colors'
    Bundle 'godlygeek/csapprox'
    Bundle 'matchit.zip'
    Bundle 'scrooloose/nerdtree'
    if !exists('g:Billinux_no_views')
        Bundle 'vim-scripts/restore_view.vim'
    endif
    Bundle 'tpope/vim-abolish.git'
    Bundle 'mbbill/undotree'
    Bundle 'vim-scripts/sessionman.vim'
    Bundle 'spf13/vim-autoclose'

endif

" Writing
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'writing')
    Bundle 'reedes/vim-litecorrect'
    Bundle 'reedes/vim-textobj-sentence'
    Bundle 'reedes/vim-textobj-quote'
    Bundle 'reedes/vim-wordy'
    Bundle 'DrawIt'
endif

" General programming
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'programming')
    Bundle 'tpope/vim-fugitive'
    Bundle 'mattn/emmet-vim'
    Bundle 'mattn/webapi-vim'
    Bundle 'mattn/gist-vim'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'godlygeek/tabular'
    if executable('ctags')
        Bundle 'majutsushi/tagbar'
    endif
endif

" Snippets & AutoComplete
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'snipmate')
    Bundle 'garbas/vim-snipmate'
    Bundle 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
elseif count(g:Billinux_bundle_groups, 'youcompleteme')
    Bundle 'Valloric/YouCompleteMe'
    Bundle 'SirVer/ultisnips'
    Bundle 'honza/vim-snippets'
elseif count(g:Billinux_bundle_groups, 'neocomplcache')
    Bundle 'Shougo/neocomplcache'
    Bundle 'Shougo/neosnippet'
    Bundle 'Shougo/neosnippet-snippets'
     Bundle 'honza/vim-snippets'
elseif count(g:Billinux_bundle_groups, 'neocomplete')
    Bundle 'Shougo/neocomplete.vim.git'
    Bundle 'Shougo/neosnippet'
    Bundle 'Shougo/neosnippet-snippets'
    Bundle 'honza/vim-snippets'
endif

" PHP
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'php')
    Bundle 'spf13/PIV'
    Bundle 'arnaud-lb/vim-php-namespace'
endif

" Python
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'python')
    if executable('python')
        Bundle 'python.vim'
        Bundle 'pythoncomplete'
    endif
endif

" Javascript
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'javascript')
    Bundle 'pangloss/vim-javascript'
    Bundle 'kchmck/vim-coffee-script'
    Bundle 'elzr/vim-json'
    Bundle 'briancollins/vim-jst'
endif

" HTML
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'html')
    Bundle 'tpope/vim-haml'
    Bundle 'digitaltoad/vim-jade'
    Bundle 'amirh/HTML-AutoCloseTag'
    Bundle 'gorodinskiy/vim-coloresque'
endif

" Twig template
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'twig')
    Bundle 'beyondwords/vim-twig'
endif



" CSS
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'css')
    Bundle 'hail2u/vim-css3-syntax'
    Bundle 'wavded/vim-stylus'
endif

" Ruby
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'ruby')
    if executable('ruby')
        Bundle 'tpope/vim-rails'
        let g:rubycomplete_buffer_loading = 1
        "let g:rubycomplete_classes_in_global = 1
        "let g:rubycomplete_rails = 1
    endif
endif

" Misc
" -----------------------------------------------------------------------------
if count(g:Billinux_bundle_groups, 'misc')
    Bundle 'tpope/vim-markdown'
endif



" Custom .vimrc bundles
" -----------------------------------------------------------------------------
" Use fork bundles config if available
if filereadable(expand("~/.vimrc.bundles.fork"))
    source ~/.vimrc.bundles.fork
endif

" Use local bundles config if available
if filereadable(expand("~/.vimrc.bundles.local"))
    source ~/.vimrc.bundles.local
endif
